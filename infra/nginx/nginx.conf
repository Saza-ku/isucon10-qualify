user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /run/nginx.pid;

worker_rlimit_nofile  4096; 

events {
  worker_connections  1024;
  multi_accept on;  # error が出るリスクあり。defaultはoff。
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    tcp_nopush  on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens    off;

    keepalive_timeout 65;
    keepalive_requests 500;

    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
    proxy_temp_path  /var/cache/nginx/tmp;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    log_format ltsv "time:$time_local"
                "\thost:$remote_addr"
                "\tforwardedfor:$http_x_forwarded_for"
                "\treq:$request"
                "\tstatus:$status"
                "\tmethod:$request_method"
                "\turi:$request_uri"
                "\tsize:$body_bytes_sent"
                "\treferer:$http_referer"
                "\tua:$http_user_agent"
                "\treqtime:$request_time"
                "\tcache:$upstream_http_x_cache"
                "\truntime:$upstream_http_x_runtime"
                "\tapptime:$upstream_response_time"
                "\tvhost:$host";

    access_log  /var/log/nginx/access.log  ltsv;

    upstream app {
        server localhost:1323;  # weight をつけるとproxyする量を変更可能。defaultは1。多いほどたくさんrequestを振り分ける。
        keepalive 60; # app server への connection を keepalive する。app が対応できるならした方が良い。
    }

    server {
        listen 80 default_server;
        listen [::]:80 default_server;
  
        # reverse proxy の 設定
        location / {
            proxy_pass http://app;
        }

        # static file の配信用の root
        root /www/data;

        location ~ .*\.(htm|html|css|js|jpg|png|gif|ico) {
            expires 24h;
            add_header Cache-Control public;
      
            open_file_cache max=100;  # file descriptor などを cache

            gzip on;  # cpu 使うのでメリット・デメリット見極める必要あり。gzip_static 使えるなら事前にgzip圧縮した上でそちらを使う。
            gzip_types text/css application/javascript application/json application/font-woff application/font-tff image/gif image/png image/jpeg image/svg+xml image/x-icon application/octet-stream;
            gzip_disable "msie6";
            gzip_static on;  # nginx configure時に --with-http_gzip_static_module 必要
            gzip_vary on;
        }

        location /api/estate/search {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;

            proxy_cache zone1;
            proxy_cache_valid 200 302 60s;
            proxy_cache_key $scheme$proxy_host$uri$is_args$args;
            add_header X-Nginx-Cache $upstream_cache_status;

            proxy_pass http://app/api/estate/search;
}
    }

    include /etc/nginx/conf.d/*.conf;
}
